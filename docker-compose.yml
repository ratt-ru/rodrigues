
# The database container, used to store the Django job results
#
db:
  image: postgres:9.3


# message broker, used for passing celery jobs between Django and workers
#
broker:
  image: rabbitmq:3.5


# The Celery worker that wil execute the tasks (schedule compute containers)
#
worker:
  build: .
  command: celery worker -A rodrigues -l INFO
  links:
    - broker
    - db
  environment:
    - DJANGO_SETTINGS_MODULE=rodrigues.settings.container
    - SECRET_KEY="doesn't matter"
    - SERVER_NAME
    - DEBUG
    - SERVER_EMAIL
    - EMAIL_PORT
    - EMAIL_HOST
    - EMAIL_HOST_USER
    - EMAIL_HOST_PASSWORD
    - STORAGE=${PWD}/storage
  volumes:
    - /var/run/docker.pid:/var/run/docker.pid
    - /var/run/docker.sock:/var/run/docker.sock
    - /var/lib/docker:/var/lib/docker
    - .:/code
    - ./storage:/storage


# The actual website
#
django:
  build: .
  command: uwsgi --socket /socket/rodrigues.sock --module rodrigues.wsgi --chmod-socket=666
  #command: gunicorn rodrigues.wsgi:application -w 2 -b :8000 --reload
  links:
    - db
    - broker
  environment:
    - DJANGO_SETTINGS_MODULE=rodrigues.settings.container
    - SECRET_KEY
    - SERVER_NAME
    - DEBUG
    - SERVER_EMAIL
    - EMAIL_PORT
    - EMAIL_HOST
    - EMAIL_HOST_USER
    - EMAIL_HOST_PASSWORD
    - STORAGE=${PWD}/storage
  volumes:
    - /var/run/docker.pid:/var/run/docker.pid
    - /var/run/docker.sock:/var/run/docker.sock
    - /var/lib/docker:/var/lib/docker
    - .:/code
    - /socket
    - ./storage:/storage


# A reverse proxy that acts like a frontend to the rest of the application
#
nginx:
  image: nginx:1.8
  volumes:
    - ./nginx.conf:/etc/nginx/nginx.conf:ro
  volumes_from:
    - django
  ports:
    - 80:80
