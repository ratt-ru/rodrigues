# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Simulation',
            fields=[
                ('id', models.AutoField(auto_created=True, serialize=False, primary_key=True, verbose_name='ID')),
                ('name', models.CharField(default='New simulation', max_length=200)),
                ('observatory', models.CharField(default='MK', max_length=32, choices=[('MK', 'MeerKAT'), ('K7', 'KAT-7'), ('JA', 'JVLA-A')])),
                ('output', models.CharField(default='I', verbose_name='Output type', max_length=1, choices=[('I', 'Image'), ('V', 'Visibilities')])),
                ('sefd', models.FloatField(verbose_name='SEFD', help_text='System defaults will be used if left blank', blank=True, null=True)),
                ('sky_type', models.CharField(default='T', max_length=1, choices=[('T', 'Tigger-LSM'), ('A', 'ASCII'), ('F', 'FITS'), ('S', 'KATALOG')])),
                ('sky_model', models.FileField(upload_to='sky', blank=True)),
                ('katalog_id', models.CharField(help_text='Choose from our sky catalogs', blank=True, default='NV', verbose_name='KATALOG', max_length=64, choices=[('NV', 'nvss6deg'), ('S3', 'scubed1deg'), ('K3', '3c147_field'), ('K4', '3c147_field_no_core')])),
                ('radius', models.FloatField(default=0.5, help_text='Radius of degrees', verbose_name='Radius', blank=True)),
                ('fluxrange', models.CharField(default='0.001-1', help_text='Flux range in Jy', verbose_name='Flux range', max_length=32)),
                ('ms_dec', models.CharField(default='-30d0m0s', help_text='in dms', verbose_name='Declination', max_length=32)),
                ('ms_ra', models.CharField(default='0h0m0s', help_text='in hms', verbose_name='Right ascension', max_length=32)),
                ('add_noise', models.BooleanField(default=True)),
                ('vis_noise_std', models.FloatField(default=0, help_text='Generates from SEFD if 0', verbose_name='Visibility noise std')),
                ('ms_synthesis', models.FloatField(default=0.25, help_text='in hours', verbose_name='Synthesis time')),
                ('ms_scan_length', models.FloatField(default=0.25, help_text='in hours', verbose_name='Scan length', blank=True)),
                ('ms_start_time', models.FloatField(default=-0.125, help_text='in hours', verbose_name='Initial hour angle', blank=True)),
                ('ms_dtime', models.IntegerField(default=10, help_text='in seconds', verbose_name='Integration time')),
                ('ms_freq0', models.FloatField(default=700, help_text='in MHz', verbose_name='Start frequency')),
                ('ms_dfreq', models.FloatField(default=50000.0, help_text='in kHz', verbose_name='Channel width')),
                ('ms_nchan', models.IntegerField(default=1, help_text='Number of frequency channels', verbose_name='Channels')),
                ('ds_parallactic_angle_rotation', models.BooleanField(default=True, help_text='Can not be applied to FITS skymodels at the moment.', verbose_name='Parallactic Angle Rotation')),
                ('ds_primary_beam', models.CharField(default='M', verbose_name='Primary Beam', max_length=1, choices=[('M', 'MeerKAT-1'), ('N', 'MeerKAT-2'), ('O', 'MeerKAT-3'), ('K', 'KAT-7'), ('W', 'WSRT'), ('J', 'JVLA')])),
                ('ds_feed_angle', models.FloatField(default=0, verbose_name='Feed angle')),
                ('cr_amp_phase_gains', models.FloatField(default=1, verbose_name='Amplitude Phase Gains')),
                ('cr_pointing_error', models.FloatField(default=0)),
                ('cr_rfi', models.FloatField(default=0)),
                ('imager', models.CharField(default='LW', verbose_name='Imager', max_length=32, choices=[('LW', 'LWIMAGER'), ('WS', 'WSCLEAN'), ('CA', 'CASA')])),
                ('im_npix', models.IntegerField(default=512, help_text='in pixels', verbose_name='Image size')),
                ('im_cellsize', models.FloatField(default=1, help_text='in arcseconds', verbose_name='Pixel size')),
                ('im_weight', models.CharField(default='N', verbose_name='uv-Weighting', max_length=1, choices=[('N', 'Natural'), ('U', 'Uniform'), ('B', 'Briggs')])),
                ('im_robust', models.FloatField(default=0, help_text='Briggs robust parameter', verbose_name='Robust')),
                ('im_weight_fov', models.FloatField(verbose_name='Weight FoV', help_text='in arcminutes', blank=True, null=True)),
                ('im_wprojplanes', models.IntegerField(default=0, verbose_name='w-Projection planes')),
                ('im_mode', models.CharField(default='C', verbose_name='Imaging mode', max_length=1, choices=[('C', 'channel'), ('M', 'mfs'), ('V', 'velocity'), ('F', 'frequency')])),
                ('channelise', models.IntegerField(default=0, help_text='0 means average all, 1 per channel, etc.', verbose_name='Image channelise')),
                ('im_stokes', models.CharField(default='I', verbose_name='Stokes', max_length=4)),
                ('lwimager', models.BooleanField(default=False, verbose_name='Deconvolve with me!')),
                ('lwimager_niter', models.IntegerField(default=1000, verbose_name='NITER')),
                ('lwimager_gain', models.FloatField(default=0.1, verbose_name='Loop gain')),
                ('lwimager_threshold', models.FloatField(default=0, help_text='In Jy', verbose_name='Clean Threshold')),
                ('lwimager_sigmalevel', models.FloatField(default=0, help_text='In sigma above noise', verbose_name='Clean sigma level')),
                ('lwimager_operation', models.CharField(default='C', verbose_name='Clean algorithm', max_length=1, choices=[('C', 'csclean'), ('H', 'hogbom'), ('D', 'clark'), ('M', 'multiscale')])),
                ('lwimager_cyclefactor', models.FloatField(default=1.5, verbose_name='Cycle factor')),
                ('lwimager_cyclespeedup', models.FloatField(default=-1, verbose_name='Cycle speed up')),
                ('lwimager_stoppointmode', models.FloatField(default=-1, verbose_name='Stop point mode,')),
                ('lwimager_nscales', models.IntegerField(default=4, verbose_name='Scales for MS clean')),
                ('lwimager_uservector', models.CharField(verbose_name='Clean scales', help_text='Comma seperated scales in pixels', max_length=64, blank=True, null=True)),
                ('wsclean', models.BooleanField(default=False, verbose_name='Deconvolve with me!')),
                ('wsclean_niter', models.IntegerField(default=1000, verbose_name='NITER')),
                ('wsclean_gain', models.FloatField(default=0.1, verbose_name='Minor loop gain')),
                ('wsclean_mgain', models.FloatField(default=0.1, verbose_name='Major loop gain')),
                ('wsclean_threshold', models.FloatField(default=0, help_text='In Jy', verbose_name='Clean Threshold')),
                ('wsclean_sigmalevel', models.FloatField(default=0, help_text='In sigma above noise', verbose_name='Clean sigma level')),
                ('wsclean_joinpolarizations', models.BooleanField(default=False, verbose_name='Join polarizations')),
                ('wsclean_joinchannels', models.BooleanField(default=False, verbose_name='Join channels')),
                ('wsclean_multiscale', models.BooleanField(default=False, verbose_name='Multiscale clean')),
                ('wsclean_multiscale_dash_threshold_dash_bias', models.FloatField(default=0.7, verbose_name='Multi scale threshold bias')),
                ('wsclean_multiscale_dash_scale_dash_bias', models.FloatField(default=0.6, verbose_name='Multi scale bias')),
                ('wsclean_cleanborder', models.FloatField(default=5, help_text='In percentage of image width/height', verbose_name='Clean border')),
                ('wsclean_smallpsf', models.BooleanField(default=False, help_text='Resize the psf to speed up minor clean iterations', verbose_name='Small PSF')),
                ('wsclean_nonegative', models.BooleanField(default=False, help_text='Do not allow negative components during cleaning', verbose_name='No negative')),
                ('wsclean_stopnegative', models.BooleanField(default=False, verbose_name='Stop on negative')),
                ('wsclean_beamsize', models.CharField(verbose_name='Restoring beam size', help_text='In arcseconds', max_length=32, blank=True, null=True)),
                ('casa', models.BooleanField(default=False, verbose_name='Deconvolve with me!')),
                ('casa_niter', models.IntegerField(default=1000, verbose_name='NITER')),
                ('casa_threshold', models.FloatField(default=0, verbose_name='Threshold')),
                ('casa_sigmalevel', models.FloatField(default=0, help_text='In sigma above noise', verbose_name='Clean sigma level')),
                ('casa_gain', models.FloatField(default='0.1', help_text='Clean Loop gain', verbose_name='Loop Gain')),
                ('casa_psfmode', models.CharField(default='CL', verbose_name='PSF mode', max_length=32, choices=[('CL', 'clark'), ('CS', 'clarkstokes'), ('H', 'hogbom')])),
                ('casa_imagermode', models.CharField(default='csclean', verbose_name='Imager mode', max_length=32, blank=True, choices=[('C', 'csclean'), ('M', 'mosiac')])),
                ('casa_gridmode', models.CharField(help_text='A-projection only works JVLA', blank=True, default='W', verbose_name='Grid mode', max_length=32, choices=[('W', 'widefield'), ('A', 'aprojection')])),
                ('casa_nterms', models.IntegerField(default=1, help_text='See CASA clean task', verbose_name='NTERMS')),
                ('casa_reffreq', models.FloatField(verbose_name='MFS ref Frequency', help_text='in MHz', blank=True, null=True)),
                ('casa_multiscale', models.CharField(verbose_name='Multiscale', help_text='Deconvolution scales in pixels', max_length=200, blank=True, null=True)),
                ('casa_negcomponent', models.FloatField(default=-1, help_text='See CASA clean task', verbose_name='Negative Components')),
                ('casa_smallscalebias', models.FloatField(default=0.6, help_text='See CASA clean task', verbose_name='Small scale bias')),
                ('casa_restoringbeam', models.CharField(verbose_name='Restoring beam', max_length=32, blank=True, null=True)),
                ('casa_cyclefactor', models.FloatField(default=1.5, verbose_name='Cycle factor')),
                ('casa_cyclespeedup', models.FloatField(default=-1, verbose_name='Cycle speed up')),
                ('moresane', models.BooleanField(default=False, verbose_name='Deconvolve with me!')),
                ('moresane_scalecount', models.IntegerField(verbose_name='Scale count', help_text='See MORESANE help', blank=True, null=True)),
                ('moresane_subregion', models.IntegerField(verbose_name='Sub region', help_text='Inner region to deconvolve in pixels', blank=True, null=True)),
                ('moresane_startscale', models.IntegerField(default=1, verbose_name='Start scale')),
                ('moresane_stopscale', models.IntegerField(default=20, verbose_name='Stop scale')),
                ('moresane_sigmalevel', models.FloatField(default=3, help_text='in sigma above noise', verbose_name='Threshold level')),
                ('moresane_loopgain', models.FloatField(default='0.1', verbose_name='Loop gain')),
                ('moresane_tolerance', models.FloatField(default=0.75, verbose_name='Tolerance')),
                ('moresane_accuracy', models.FloatField(default=1e-06, verbose_name='Accuracy')),
                ('moresane_majorloopmiter', models.IntegerField(default=100, verbose_name='Major loop iterations')),
                ('moresane_minorloopmiter', models.IntegerField(default=50, verbose_name='Minor loop iterations')),
                ('moresane_convmode', models.CharField(default='C', verbose_name='Convolution mode', max_length=32, choices=[('C', 'circular'), ('L', 'linear')])),
                ('moresane_enforcepositivity', models.BooleanField(default=False, verbose_name='Enforce Positivity')),
                ('moresane_edgesupression', models.BooleanField(default=False, verbose_name='Edge Suppression')),
                ('moresane_edgeoffset', models.IntegerField(default=0, verbose_name='Edge offset')),
                ('moresane_mfs', models.BooleanField(default=False, help_text='Comes with an spi map', verbose_name='MFS map')),
                ('moresane_spi_dash_sigmalevel', models.FloatField(default=10, help_text='In sigma above noise', verbose_name='spi threshold level')),
                ('state', models.CharField(default='S', max_length=1, choices=[('S', 'scheduled'), ('R', 'running'), ('C', 'crashed'), ('F', 'finished')])),
                ('started', models.DateTimeField(blank=True, null=True)),
                ('finished', models.DateTimeField(blank=True, null=True)),
                ('log', models.FileField(upload_to='', blank=True, null=True)),
                ('console', models.TextField(blank=True, null=True)),
                ('task_id', models.CharField(max_length=36, blank=True, null=True)),
                ('results_uvcov', models.FileField(upload_to='uvcov', blank=True, null=True)),
                ('results_dirty', models.FileField(upload_to='dirty', blank=True, null=True)),
                ('results_psf', models.FileField(upload_to='psf', blank=True, null=True)),
                ('results_lwimager_model', models.FileField(upload_to='lwimager_model', blank=True, null=True)),
                ('results_lwimager_residual', models.FileField(upload_to='lwimager_residual', blank=True, null=True)),
                ('results_lwimager_restored', models.FileField(upload_to='lwimager_restored', blank=True, null=True)),
                ('results_casa_model', models.FileField(upload_to='casa_model', blank=True, null=True)),
                ('results_casa_residual', models.FileField(upload_to='casa_residual', blank=True, null=True)),
                ('results_casa_restored', models.FileField(upload_to='casa_restored', blank=True, null=True)),
                ('results_wsclean_model', models.FileField(upload_to='wsclean_model', blank=True, null=True)),
                ('results_wsclean_residual', models.FileField(upload_to='wsclean_residual', blank=True, null=True)),
                ('results_wsclean_restored', models.FileField(upload_to='wsclean_restored', blank=True, null=True)),
                ('results_moresane_model', models.FileField(upload_to='moresane_model', blank=True, null=True)),
                ('results_moresane_residual', models.FileField(upload_to='moresane_residual', blank=True, null=True)),
                ('results_moresane_restored', models.FileField(upload_to='moresane_restored', blank=True, null=True)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
    ]
